<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>写博客也要讲基本法</title><link href="http://zhao-ji.github.io/" rel="alternate"></link><link href="http://zhao-ji.github.io/feeds/hai-jiang-tian-mo-li.atom.xml" rel="self"></link><id>http://zhao-ji.github.io/</id><updated>2015-01-15T17:40:00+08:00</updated><entry><title>Python 字符串替换</title><link href="http://zhao-ji.github.io/2015/python-zi-fu-chuan-ti-huan.html" rel="alternate"></link><updated>2015-01-15T17:40:00+08:00</updated><author><name>海江田万里</name></author><id>tag:zhao-ji.github.io,2015-01-15:2015/python-zi-fu-chuan-ti-huan.html</id><summary type="html">&lt;p&gt;=================================&lt;/p&gt;
&lt;h2&gt;字符串替换&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;replace_words&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;word_dic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
    &lt;span class="n"&gt;yo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;escape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;word_dic&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; 
    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;word_dic&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;yo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;链接： &lt;a href="http://segmentfault.com/q/1010000002474308"&gt;请教：Python字符串替换的一个问题&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>一月点滴收集</title><link href="http://zhao-ji.github.io/2015/yi-yue-dian-di-shou-ji.html" rel="alternate"></link><updated>2015-01-13T16:30:00+08:00</updated><author><name>海江田万里</name></author><id>tag:zhao-ji.github.io,2015-01-13:2015/yi-yue-dian-di-shou-ji.html</id><summary type="html">&lt;p&gt;=======================&lt;/p&gt;
&lt;h2&gt;Python Tips&lt;/h2&gt;
&lt;h4&gt;Python 暴力字典生成（brute 算法）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;可重复全排列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;brute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="err"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;candidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;candidate&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt;
            &lt;span class="n"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_iterable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;choices&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;repeat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;isinstance 用法&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;isinstance(...)
   isinstance(object, class-or-type-or-tuple) -&amp;gt; bool&lt;/p&gt;
&lt;p&gt;Return whether an object is an instance of a class or of a subclass thereof.
   With a type as second argument, return whether that is the objects type.
   The form using a tuple, isinstance(x, (A, B, ...)), is a shortcut for
   isinstance(x, A) or isinstance(x, B) or ... (etc.).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In [9]: isinstance("hello", str)
Out[9]: True&lt;/p&gt;
&lt;p&gt;In [10]: isinstance(1, (str, int))
Out[10]: True&lt;/p&gt;
&lt;p&gt;In [4]: class A:
   ...:     pass
   ...: 
In [5]: a = A()
In [6]: isinstance(a, A)
Out[6]: True&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;isinstance 的第二个参数可以是 类型、类、包含类型或类的元祖。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;How to flatten arbitrarily nested lists in Python?&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;nested_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],[&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]]]]&lt;/span&gt;

    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nested&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;nested&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;
            &lt;span class="nl"&gt;else:&lt;/span&gt;
                &lt;span class="n"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;

    &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nested_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;hi&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;hello&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;VIM Tips&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;以普通用户身份打开的文件需要以sudo身份保存&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;:w !sudo tee %&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;插入模式 自动补全&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;CTRL + N&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;打开文件自动回到上次编辑位置&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;au BufReadPost * if line("'\"") &amp;gt; 0|if line("'\"") &amp;lt;= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;书签使用&lt;/h4&gt;
&lt;h6&gt;命令模式&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;marks 显示所有书签
marks a 显示A书签的详细信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6&gt;普通模式&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;ma 在当前位置设置A书签, 大写字母为全局书签，小写字母为局部书签
&lt;code&gt;a 回到A书签所在行所在列
'a 回到A书签所在行&lt;/code&gt;. 回到上次编辑位置所在行所在列
'. 回到上次编辑位置所在行&lt;/p&gt;
&lt;/blockquote&gt;</summary></entry><entry><title>Socks5协议</title><link href="http://zhao-ji.github.io/2015/socks5xie-yi.html" rel="alternate"></link><updated>2015-01-13T12:16:00+08:00</updated><author><name>海江田万里</name></author><id>tag:zhao-ji.github.io,2015-01-13:2015/socks5xie-yi.html</id><summary type="html">&lt;p&gt;===========================&lt;/p&gt;
&lt;h2&gt;socks5 协议&lt;/h2&gt;
&lt;h4&gt;特点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;标准 RFC1928&lt;/li&gt;
&lt;li&gt;socks4 的改进版本&lt;/li&gt;
&lt;li&gt;增加了用户名密码认证&lt;/li&gt;
&lt;li&gt;增加了DNS域名查询&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;握手经过&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;客户端发起&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;field1&lt;/th&gt;
&lt;th align="center"&gt;field2&lt;/th&gt;
&lt;th align="center"&gt;field3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte per method&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;版本号&lt;/td&gt;
&lt;td align="center"&gt;支持的认证方法数量&lt;/td&gt;
&lt;td align="center"&gt;认证方式代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;\x05&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;服务端返回&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;field1&lt;/th&gt;
&lt;th align="center"&gt;field2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1 bytes&lt;/td&gt;
&lt;td align="center"&gt;1 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;版本号&lt;/td&gt;
&lt;td align="center"&gt;认证方式代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;\x05&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;传送数据&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;客户端请求&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;协议版本号&lt;/th&gt;
&lt;th align="center"&gt;请求类别&lt;/th&gt;
&lt;th align="center"&gt;保留位&lt;/th&gt;
&lt;th align="center"&gt;地址类型&lt;/th&gt;
&lt;th align="center"&gt;目的地址&lt;/th&gt;
&lt;th align="center"&gt;端口号&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;dynamic&lt;/td&gt;
&lt;td align="center"&gt;2 byte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;\x05&lt;/td&gt;
&lt;td align="center"&gt;\x01&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;td align="center"&gt;\x01&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;4 bytes of IPv4&lt;/strong&gt; &lt;strong&gt;16bytes of IPv6&lt;/strong&gt; &lt;strong&gt;1 byte of name length and the name&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;\x08\x00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;服务端返回&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;版本号&lt;/th&gt;
&lt;th align="center"&gt;状态&lt;/th&gt;
&lt;th align="center"&gt;保留字段&lt;/th&gt;
&lt;th align="center"&gt;地址类型&lt;/th&gt;
&lt;th align="center"&gt;目的地址&lt;/th&gt;
&lt;th align="center"&gt;端口号&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;跟客户端请求一致&lt;/td&gt;
&lt;td align="center"&gt;2 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;\x05&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;td align="center"&gt;\x01&lt;/td&gt;
&lt;td align="center"&gt;as the client&lt;/td&gt;
&lt;td align="center"&gt;\x08\x00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary></entry><entry><title>netcat 使用笔记</title><link href="http://zhao-ji.github.io/2015/netcat-shi-yong-bi-ji.html" rel="alternate"></link><updated>2015-01-12T20:00:00+08:00</updated><author><name>海江田万里</name></author><id>tag:zhao-ji.github.io,2015-01-12:2015/netcat-shi-yong-bi-ji.html</id><summary type="html">&lt;p&gt;======================&lt;/p&gt;
&lt;h2&gt;netcat 三个例子&lt;/h2&gt;
&lt;h3&gt;本地 client-server socket 模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;服务端：
    nc -l 666&lt;/li&gt;
&lt;li&gt;客户端：
    nc localhost 666&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;用 nc 传送文件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;服务端：
    nc -l 666 | tee new_file.txt&lt;/li&gt;
&lt;li&gt;客户端：
    cat file.txt | nc localhost 666&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;永不断开的服务端&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;服务端：
    nc -k -l 666&lt;/li&gt;
&lt;li&gt;客户端：
    nc localhost 666&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;端口扫描&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nc -zv example.com 1-65536 2&amp;gt;&amp;amp;1| grep succee&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;服务端启用执行 SHELL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;服务端
    nc -l 666 -e /bin/sh&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;netcat 参数详解&lt;/h2&gt;
&lt;h3&gt;两端都适用的参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;-u UDP连接&lt;/li&gt;
&lt;li&gt;-4 IPV4 -6 IPV6&lt;/li&gt;
&lt;li&gt;-d 不接受 stdin 的输入&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;服务端适用的参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;-k 即使客户端断开，服务端也不断&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;客户端适用的参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;-w 10 十秒接受不到内容就断开&lt;/li&gt;
&lt;li&gt;-n 不查询DNS&lt;/li&gt;
&lt;li&gt;-p 设置源端口&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>正则表达式</title><link href="http://zhao-ji.github.io/2014/zheng-ze-biao-da-shi.html" rel="alternate"></link><updated>2014-08-10T20:30:00+08:00</updated><author><name>海江田万里</name></author><id>tag:zhao-ji.github.io,2014-08-10:2014/zheng-ze-biao-da-shi.html</id><summary type="html">&lt;p&gt;================&lt;/p&gt;
&lt;h1&gt;正则表达式&lt;/h1&gt;
&lt;h2&gt;元字符&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;()&lt;/em&gt;  &lt;em&gt;[]&lt;/em&gt;  &lt;em&gt;{}&lt;/em&gt;     捕获器 选择器  次数&lt;/li&gt;
&lt;li&gt;&lt;em&gt;*&lt;/em&gt; &lt;em&gt;+&lt;/em&gt; &lt;em&gt;?&lt;/em&gt;  零和任意多次  一次和任意多次  零次和一次&lt;/li&gt;
&lt;li&gt;&lt;em&gt;^&lt;/em&gt; &lt;em&gt;$&lt;/em&gt; 匹配开始 匹配结束&lt;/li&gt;
&lt;li&gt;&lt;em&gt;\&lt;/em&gt; 转义&lt;/li&gt;
&lt;li&gt;&lt;em&gt;|&lt;/em&gt; 或&lt;/li&gt;
&lt;li&gt;&lt;em&gt;.&lt;/em&gt; 匹配任意字符  非换行符&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;匹配案例&lt;/h2&gt;
&lt;h3&gt;类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;\d&lt;/em&gt; 匹配数字 &lt;/li&gt;
&lt;li&gt;&lt;em&gt;\D&lt;/em&gt; 匹配非数字&lt;/li&gt;
&lt;li&gt;&lt;em&gt;\s&lt;/em&gt; 匹配空白字符&lt;/li&gt;
&lt;li&gt;&lt;em&gt;\S&lt;/em&gt; 匹配非空白字符&lt;/li&gt;
&lt;li&gt;&lt;em&gt;\w&lt;/em&gt; 匹配字母和数字&lt;/li&gt;
&lt;li&gt;&lt;em&gt;\W&lt;/em&gt; 匹配非字母和数字&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;次数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;{0,}&lt;/em&gt; *&lt;/li&gt;
&lt;li&gt;&lt;em&gt;{1,}&lt;/em&gt; +&lt;/li&gt;
&lt;li&gt;&lt;em&gt;{0,1}&lt;/em&gt; ?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;消歧义&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;raw \不用转义&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Python Re 模块用法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Re 方法： search  match findall finditer&lt;/li&gt;
&lt;li&gt;RegexObject 方法 ： group start end span&lt;/li&gt;
&lt;li&gt;compile 选项 ： &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;DOTALL S .代表一切字符 包括换行符&lt;/li&gt;
&lt;li&gt;IGNORECASE I 忽略大小写、&lt;/li&gt;
&lt;li&gt;LOCALE L 本地化字符设置&lt;/li&gt;
&lt;li&gt;MULTILINE M 多行匹配 改变^$的行为&lt;/li&gt;
&lt;li&gt;VERBOSE V 分行写RE语句  并可以添加注释&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="正则表达式"></category></entry><entry><title>Linux命令概要</title><link href="http://zhao-ji.github.io/2014/linuxming-ling-gai-yao.html" rel="alternate"></link><updated>2014-06-01T17:30:00+08:00</updated><author><name>海江田万里</name></author><id>tag:zhao-ji.github.io,2014-06-01:2014/linuxming-ling-gai-yao.html</id><summary type="html">&lt;p&gt;====================================&lt;/p&gt;
&lt;h1&gt;Linux命令概要&lt;/h1&gt;
&lt;h2&gt;帮助命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;whatis&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;man&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;info&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;which : 找出命令路径&lt;/li&gt;
&lt;li&gt;whereis : 找到命令路径&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;用户&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;finger someuser&lt;/li&gt;
&lt;li&gt;who&lt;blockquote&gt;
&lt;p&gt;who am I&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;su&lt;/li&gt;
&lt;li&gt;sudo&lt;/li&gt;
&lt;li&gt;passwd&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;shell&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;history 显示当下最近输入的命令&lt;/li&gt;
&lt;li&gt;alias 显示所有的命令别称&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;env 显示所有的环境变量
&lt;pre&gt;
    $export var=value
&lt;/pre&gt;
将环境变量 var 设置为value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;expr 1+1 计算1+1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;文件系统&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;du -sh somefile 以人类可见格式显示文件的摘要大小信息&lt;/li&gt;
&lt;li&gt;find 查找命令&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;locate 寻找包含有字符串的路径&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$updatedb 更新数据库 获取最新locate信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pwd 显示当前路径&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;cd &lt;em&gt;path&lt;/em&gt; 跳转到path目录下&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;文件操作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;touch&lt;/li&gt;
&lt;li&gt;rm&lt;/li&gt;
&lt;li&gt;cp&lt;/li&gt;
&lt;li&gt;ls&lt;/li&gt;
&lt;li&gt;mkdir&lt;/li&gt;
&lt;li&gt;rmdir&lt;/li&gt;
&lt;li&gt;chown&lt;/li&gt;
&lt;li&gt;chmod&lt;/li&gt;
&lt;li&gt;chgrp&lt;/li&gt;
&lt;li&gt;&lt;em&gt;file&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;od -c somefile 以二进制形式显示文件内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;文件显示&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;cat&lt;/li&gt;
&lt;li&gt;head&lt;/li&gt;
&lt;li&gt;tail&lt;/li&gt;
&lt;li&gt;more&lt;/li&gt;
&lt;li&gt;less&lt;/li&gt;
&lt;li&gt;diff&lt;/li&gt;
&lt;li&gt;sort 对文件中的行进行排序&lt;/li&gt;
&lt;li&gt;uniq 显示文件中不重复的行&lt;/li&gt;
&lt;li&gt;wc 统计字数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;文本&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;echo&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;时间与日期&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;date&lt;/li&gt;
&lt;li&gt;sleep&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;进程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;top&lt;/li&gt;
&lt;li&gt;ps&lt;/li&gt;
&lt;li&gt;kill&lt;/li&gt;
&lt;li&gt;time&lt;/li&gt;
&lt;li&gt;lsof&lt;/li&gt;
&lt;li&gt;dmesg&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;硬件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;uname -a 显示系统信息&lt;/li&gt;
&lt;li&gt;df -lh&lt;/li&gt;
&lt;li&gt;mount 显示系统挂在情况&lt;/li&gt;
&lt;li&gt;pagesize&lt;/li&gt;
&lt;li&gt;free&lt;/li&gt;
&lt;li&gt;arch&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;网络&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ifconfig&lt;/li&gt;
&lt;li&gt;iwconfig&lt;/li&gt;
&lt;li&gt;route&lt;/li&gt;
&lt;li&gt;netstat&lt;/li&gt;
&lt;li&gt;ping&lt;/li&gt;
&lt;li&gt;traceroute&lt;/li&gt;
&lt;li&gt;dhclient&lt;/li&gt;
&lt;li&gt;host&lt;/li&gt;
&lt;li&gt;wget&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;SSH登录与文件传输&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ssh&lt;/li&gt;
&lt;li&gt;sftp&lt;/li&gt;
&lt;li&gt;scp&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;压缩与归档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;gzip&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;li&gt;zip&lt;/li&gt;
&lt;li&gt;gunzip&lt;/li&gt;
&lt;li&gt;tar&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;打印&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;lpt&lt;/li&gt;
&lt;li&gt;lpstat&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Linux cheat-sheet"></category></entry></feed>