<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>写博客也要讲基本法</title><link href="http://zhao-ji.github.io/" rel="alternate"></link><link href="http://zhao-ji.github.io/feeds/ji-zhu-ju-hui.atom.xml" rel="self"></link><id>http://zhao-ji.github.io/</id><updated>2015-06-06T18:30:00+08:00</updated><entry><title>PHP 大会</title><link href="http://zhao-ji.github.io/2015/php-da-hui.html" rel="alternate"></link><updated>2015-06-06T18:30:00+08:00</updated><author><name>p0f</name></author><id>tag:zhao-ji.github.io,2015-06-06:2015/php-da-hui.html</id><summary type="html">&lt;p&gt;================================&lt;/p&gt;
&lt;h2&gt;最靠谱的人组织的世界上最好的语言的技术大会&lt;/h2&gt;
&lt;h4&gt;开场&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;六月六号、六月七号两天，在鑫海久江大酒店。场地豪华宽敞，中午还有美女热舞。足见高春辉的人脉和拉赞助能力。&lt;/li&gt;
&lt;li&gt;开场高春辉就说我们跟CSDN不一样，他们是面向架构师的技术大会。我们希望能给一线开发工程师分享一些干货。&lt;/li&gt;
&lt;li&gt;靠谱的人做靠谱的事，do one thing and do it well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;第一讲&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;上午第一讲是新浪微博的哥们儿，原来新浪微博后台主要用PHP。&lt;/li&gt;
&lt;li&gt;那哥们儿坦言新浪微博后台接口有历史包袱，kjava接口有次更新被移除了，结果电话被打爆，背了个A级故障。&lt;/li&gt;
&lt;li&gt;创业公司源代码一穷二白一片荒芜，用户量也少，写起来没快感。像新浪微博这样，历史包袱太大搞起来又碍手碍脚。&lt;/li&gt;
&lt;li&gt;中等规模的公司，中等规模的项目，才是最适合程序员待的地方。&lt;/li&gt;
&lt;li&gt;这哥们在给手机端提供接口，新浪微博API早已实现分层，他们算是事物层API，原子层API还在下面&lt;/li&gt;
&lt;li&gt;由 Apache 换成了 NginX, PHP 由5.3升级到5.4，下一步还要升级到 PHP7。用的自己写的yaf yak.&lt;/li&gt;
&lt;li&gt;换成 NginX 遇到了返回验证码时没有 Content-Length 的坑&lt;/li&gt;
&lt;li&gt;PHP 是用 C 写的，每一次版本升级都能带来巨大的性能提升。&lt;/li&gt;
&lt;li&gt;这哥们最后说分布服务器和数据中心的通信要从HTTP换成SocketServer, 还要从TCP换成UDP。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;第二讲&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;web安全相关的&lt;/li&gt;
&lt;li&gt;SQL注入 盲注 union注入 error注入&lt;/li&gt;
&lt;li&gt;正则注入&lt;/li&gt;
&lt;li&gt;CSRF注入 请求加token&lt;/li&gt;
&lt;li&gt;XSS注入 过滤标签&lt;/li&gt;
&lt;li&gt;webshell 注入&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;中午休息&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;再胡同里面绕了一圈，找了个饭店吃了个饭&lt;/li&gt;
&lt;li&gt;领了T-shirt&lt;/li&gt;
&lt;li&gt;中午美女热舞，看的出来主办方真的是在用心做事&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;第三讲&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PHP并发并行编程&lt;/li&gt;
&lt;li&gt;进程池的用法 是为了避免单进程阻塞太厉害，而多进程相当吃内存的折中办法&lt;/li&gt;
&lt;li&gt;基于epoll的异步回调机制 用单进程单线程解决C10K问题&lt;/li&gt;
&lt;li&gt;演讲嘉宾原来再腾讯朋友网供职，他开发的框架是多进程多线程的事件驱动的异步回调&lt;/li&gt;
&lt;li&gt;现在每秒能抗70万并发&lt;/li&gt;
&lt;/ul&gt;</summary></entry></feed>