<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>写博客也要讲基本法</title><link href="http://zhao-ji.github.io/" rel="alternate"></link><link href="http://zhao-ji.github.io/feeds/network.atom.xml" rel="self"></link><id>http://zhao-ji.github.io/</id><updated>2015-07-15T18:30:00+08:00</updated><entry><title>Scapy</title><link href="http://zhao-ji.github.io/2015/scapy.html" rel="alternate"></link><updated>2015-07-15T18:30:00+08:00</updated><author><name>p0f</name></author><id>tag:zhao-ji.github.io,2015-07-15:2015/scapy.html</id><summary type="html">&lt;p&gt;====================================&lt;/p&gt;
&lt;h1&gt;抓包工具 Scapy&lt;/h1&gt;
&lt;hr /&gt;
&lt;h2&gt;Content&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1. IP 包结构， ICMP 包结构， TCP 包结构， UDP 包结构
2. BPF(Berkeley Packet Filter)，学习使用 tcpdump
3. Scapy 安装、使用、小例子
4. GFW 观察
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;Limit&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1. 网络层之上
2. 应用层之下
2. IPv4
3. No NAT
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2&gt;推荐书目&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1. TCP/IP 协议详解
2. 超级安全工具集
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;网络层以上常用包结构&lt;/h3&gt;
&lt;h4&gt;IP&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;* 通常 20 个字节
* 版本号 IPv4
* IP 头部长度 以 **4字节** 为单位, 最小是*5*，最大是*15*
* IP 报文全长
* TTL time-to-live (Traceroute 就是在用这个)
* 协议
    * 1 ICMP
    * 6 TCP
    * 17 UDP
    * 89 OSPF
* checksum 经过每一跳路由都要经过重新计算，计算和校验步骤：
    * checksum 初始值设为零
    * 以两个字节为单位 相加
    * 溢出位拿出来 高位补零相加
    * 最后的和取反就是最终的 校验和
    * 接收端收到后 拆成两两字节 相加 和为0
* 源地址和目的地址
![IP 包结构](http://7sbpck.com1.z0.glb.clouddn.com/ip.png)
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;ICMP&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;* 头部有 4 个字节
* Type 一个字节
* Code 一个字节
* CheckSum 两个字节 校验 ICMP Header 和 Body
![ICMP 包结构](http://7sbpck.com1.z0.glb.clouddn.com/icmp.png)
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;h6&gt;ICMP-ECHO&lt;/h6&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    * **捕捉实例**
    * ID
    * Sequence
    * Timestamp
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;h4&gt;UDP&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;* 头部 8 个字节
* 源端口 [0, 65535] 目的端口 [1, 65535] 分别两字节
* Length UDP 包总长度
* CheckSum UDP 包校验和 （pseudo-header）
![UDP 包结构](http://7sbpck.com1.z0.glb.clouddn.com/udp.png)
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;h5&gt;DNS&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    * 无连接
    * 实际操作抓包
    * GFW 投毒、劫持
    * GFW 双向劫持观察
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;No TCP&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="err"&gt;服务器间通信&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="err"&gt;小包&lt;/span&gt; &lt;span class="err"&gt;数据少&lt;/span&gt; &lt;span class="err"&gt;频繁&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Replace&lt;/span&gt; &lt;span class="n"&gt;HTTP&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Replace&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;UDP&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;ICMP&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="err"&gt;新浪微博&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;BitTorrent&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;BEP&lt;/span&gt; &lt;span class="mo"&gt;002&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//bittorrent.org/beps/bep_0029.html)&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//notcp.io/)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;h4&gt;TCP&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;* 头部一般是 20 个字节 最多 60 字节
* 源端口 目的端口 各 16 位
* Sequence Acknowledgment 各 32 位
* Header Length 4 bit [5, 15]
* Fin Syn Rst Push Ack Urg
* CheckSum
* 建立连接 三次握手
* 释放连接 四次挥手
* 抓包观察 三次握手 flags and seq/ack
* 抓包观察 四次挥手 flags and seq/ack
* 抓包观察 数据传输 http-scapy 抓取 HTTP 报文
* GFW 观察 TCP Reset
![TCP 包结构](http://7sbpck.com1.z0.glb.clouddn.com/tcp.png)
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;BGP 学习 使用&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;* type
    * host
        &amp;gt; host chashuibiao.org
        &amp;gt; host 23.226.226.196
    * net
        &amp;gt; net 10.0.80
        &amp;gt; net 10.0.80.154/24
    * port
        &amp;gt; port 80
    * portrange
        &amp;gt; protrange 100-200
* dir
    * src
        &amp;gt; src host chashuibiao.org
    * dst
        &amp;gt; dst port 80
* proto
    * ip
    * udp
    * tcp
    * icmp
* len
    * less than
        &amp;gt; len &amp;lt;= length
    * greater than
        &amp;gt; len &amp;gt;= length
* flags
    * icmptype
    * icmpcode
    * tcpflags
* logical operator
    * and
    * or
    * not
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h3&gt;Scapy 安装 使用 帮助&lt;/h3&gt;
&lt;h4&gt;我们为什么要使用 Scapy&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;* 能发包
* 发包时能控制包的每一个细节
* 能抓包
* 抓完能看包的每一个细节 （多种图形化展示方式）
* 能边抓边看 交互式发现、摸索
* 放在脚本里面用
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;安装&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;* sudo apt-get install tcpdump graphviz imagemagick python-gnuplot python-crypto python-pyx
* sudo pip install scapy scapy-http
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;帮助&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;__builtin__&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="nn"&gt;impor&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;islower&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nb"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__builtin__&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ICMP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UDP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DNS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DNSQR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TCP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;魔法函数&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scapy_http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;traceroute&lt;/span&gt; 
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;tshark&lt;/span&gt; &lt;span class="n"&gt;wireshark&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sniff&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;rdpcap&lt;/span&gt; &lt;span class="n"&gt;wrpcap&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;sendp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;sendpfast&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sr1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;promiscping&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;is_promisc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;实际上手操作&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1. sniff use BPF and scapy_http
2. Christmas-Scan (PFU) FIN-scan Null-scan
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>NMap 使用</title><link href="http://zhao-ji.github.io/2015/nmap-shi-yong.html" rel="alternate"></link><updated>2015-01-19T14:40:00+08:00</updated><author><name>p0f</name></author><id>tag:zhao-ji.github.io,2015-01-19:2015/nmap-shi-yong.html</id><summary type="html">&lt;p&gt;================================&lt;/p&gt;
&lt;h2&gt;nmap 简介&lt;/h2&gt;
&lt;h3&gt;概要&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;nmap (network mapper)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nmap -A targetip (全面进攻型扫描)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nmap 主要功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Host Discovery(主机发现)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nmap -sn 192.168.1.1/24&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Port Scanning(端口扫描)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nmap -F 192.168.1.250(快速扫描前100个热门端口)
nmap 192.168.1.250 -p 80 (指定端口扫描)
nmap -r 192.168.1.1 (顺序扫描端口)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Version Detection(版本侦测)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;nmap -sV 192.168.1.250&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OS Detection(操作系统侦测)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo nmap -O 192.168.1.250(需要超级用户权限)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FireWall/IDS evasion(防火墙/IDS避规)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Socks5协议</title><link href="http://zhao-ji.github.io/2015/socks5xie-yi.html" rel="alternate"></link><updated>2015-01-13T12:16:00+08:00</updated><author><name>p0f</name></author><id>tag:zhao-ji.github.io,2015-01-13:2015/socks5xie-yi.html</id><summary type="html">&lt;p&gt;===========================&lt;/p&gt;
&lt;h2&gt;socks5 协议&lt;/h2&gt;
&lt;h4&gt;特点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;标准 RFC1928&lt;/li&gt;
&lt;li&gt;socks4 的改进版本&lt;/li&gt;
&lt;li&gt;增加了用户名密码认证&lt;/li&gt;
&lt;li&gt;增加了DNS域名查询&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;握手经过&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;客户端发起&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;field1&lt;/th&gt;
&lt;th align="center"&gt;field2&lt;/th&gt;
&lt;th align="center"&gt;field3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte per method&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;版本号&lt;/td&gt;
&lt;td align="center"&gt;支持的认证方法数量&lt;/td&gt;
&lt;td align="center"&gt;认证方式代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;\x05&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;服务端返回&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;field1&lt;/th&gt;
&lt;th align="center"&gt;field2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1 bytes&lt;/td&gt;
&lt;td align="center"&gt;1 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;版本号&lt;/td&gt;
&lt;td align="center"&gt;认证方式代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;\x05&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;传送数据&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;客户端请求&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;协议版本号&lt;/th&gt;
&lt;th align="center"&gt;请求类别&lt;/th&gt;
&lt;th align="center"&gt;保留位&lt;/th&gt;
&lt;th align="center"&gt;地址类型&lt;/th&gt;
&lt;th align="center"&gt;目的地址&lt;/th&gt;
&lt;th align="center"&gt;端口号&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;dynamic&lt;/td&gt;
&lt;td align="center"&gt;2 byte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;\x05&lt;/td&gt;
&lt;td align="center"&gt;\x01&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;td align="center"&gt;\x01&lt;/td&gt;
&lt;td align="center"&gt;&lt;strong&gt;4 bytes of IPv4&lt;/strong&gt; &lt;strong&gt;16bytes of IPv6&lt;/strong&gt; &lt;strong&gt;1 byte of name length and the name&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;\x08\x00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;服务端返回&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;版本号&lt;/th&gt;
&lt;th align="center"&gt;状态&lt;/th&gt;
&lt;th align="center"&gt;保留字段&lt;/th&gt;
&lt;th align="center"&gt;地址类型&lt;/th&gt;
&lt;th align="center"&gt;目的地址&lt;/th&gt;
&lt;th align="center"&gt;端口号&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;1 byte&lt;/td&gt;
&lt;td align="center"&gt;跟客户端请求一致&lt;/td&gt;
&lt;td align="center"&gt;2 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;\x05&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;td align="center"&gt;\x00&lt;/td&gt;
&lt;td align="center"&gt;\x01&lt;/td&gt;
&lt;td align="center"&gt;as the client&lt;/td&gt;
&lt;td align="center"&gt;\x08\x00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary></entry><entry><title>netcat 使用笔记</title><link href="http://zhao-ji.github.io/2015/netcat-shi-yong-bi-ji.html" rel="alternate"></link><updated>2015-01-12T20:00:00+08:00</updated><author><name>p0f</name></author><id>tag:zhao-ji.github.io,2015-01-12:2015/netcat-shi-yong-bi-ji.html</id><summary type="html">&lt;p&gt;======================&lt;/p&gt;
&lt;h2&gt;netcat 三个例子&lt;/h2&gt;
&lt;h3&gt;本地 client-server socket 模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;服务端：
    nc -l 666&lt;/li&gt;
&lt;li&gt;客户端：
    nc localhost 666&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;用 nc 传送文件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;服务端：
    nc -l 666 | tee new_file.txt&lt;/li&gt;
&lt;li&gt;客户端：
    cat file.txt | nc localhost 666&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;永不断开的服务端&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;服务端：
    nc -k -l 666&lt;/li&gt;
&lt;li&gt;客户端：
    nc localhost 666&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;端口扫描&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nc -zv example.com 1-65536 2&amp;gt;&amp;amp;1| grep succee&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;服务端启用执行 SHELL&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;服务端
    nc -l 666 -e /bin/sh&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;netcat 参数详解&lt;/h2&gt;
&lt;h3&gt;两端都适用的参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;-u UDP连接&lt;/li&gt;
&lt;li&gt;-4 IPV4 -6 IPV6&lt;/li&gt;
&lt;li&gt;-d 不接受 stdin 的输入&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;服务端适用的参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;-k 即使客户端断开，服务端也不断&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;客户端适用的参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;-w 10 十秒接受不到内容就断开&lt;/li&gt;
&lt;li&gt;-n 不查询DNS&lt;/li&gt;
&lt;li&gt;-p 设置源端口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;netcat 蜜罐&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;netcat -l -p 442 实时监听442端口&lt;/li&gt;
&lt;/ul&gt;</summary></entry></feed>